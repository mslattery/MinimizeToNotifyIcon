<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notifyIcon1.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAACmY9QApmPUGKZj1SSmY9akpmPXbKZf14ymX9eMpmPXbKZj1qSmY9UkpmPUGKZj1AAAA
        AAAAAAAAKZj1ACmY9QApmPUYKZj1kimY9dMpmPWWKJ31Zieq9IonqvSKKJ31ZimY9ZYpmPXTKZj1kimY
        9RgpmPUAKZj1ACmY9QApmPUYKZj1rymY9bkpmPUzJbP0DCW29J4ltfT6JbX0+iW29J4lsvQMKZj1MymY
        9bkpmPWwKZj1GCmY9QApmPUFKZj1kimY9bkpmPUaJqz0ACW19C0ltfTrJbX0/yW19P8ltfTrJbX0LCas
        9AApmPUaKZj1uSmY9ZIpmPUFKZj1SSmY9dEpmPU0KZj1ACW19AAltfQeJbX02CW19P8ltfT/JbX02CW1
        9B4ltfQAKZj1ACmY9TQpmPXRKZj1SSmY9agpmPWWKZj1ASmY9QAltfQAJbX0ACW19E8ltfS9JbX0vCW1
        9E8ltfQAJbX0ACmY9QApmPUBKZj1lymY9agpmPXbKZj1VSmY9QAAAAAAJbX0ACW19AAltfQoJbX0jiW1
        9I4ltfQnJbX0ACW19AAAAAAAKZj1ACmY9VUpmPXbKZj15ymY9TcpmPUAAAAAACW19AAltfQTJbX0vyW1
        9P8ltfT/JbX0vyW19BMltfQAAAAAACmY9QApmPU3KZj15ymY9ecpmPU3KZj1AAAAAAAltfQAJbX0MyW1
        9O8ltfT/JbX0/yW19O4ltfQwJbX0AAAAAAApmPUAKZj1NymY9ecpmPXbKZj1VSmY9QAAAAAAJbX0ACW1
        9DgltfTyJbX0/yW19P8ltfTvJbX0MiW19AAAAAAAKZj1ACmY9VUpmPXbKZj1qCmY9ZYpmPUBKZj1ACW1
        9AAltfQ4JbX08iW19P8ltfT/JbX07yW19DIltfQAKZj1ACmY9QEpmPWXKZj1qCmY9UkpmPXRKZj1NCmY
        9QAltfQAJbX0OCW19PIltfT/JbX0/yW19O8ltfQyJbX0ACmY9QApmPU0KZj10SmY9UkpmPUFKZj1kymY
        9bkpmPUaJqz0ACW19C4ltfTsJbX0/yW19P8ltfTrJbX0LSas9AApmPUaKZj1uSmY9ZIpmPUFKZj1ACmY
        9RgpmPWvKZj1uSmY9TMls/QMJbb0niW19PoltfT6Jbb0niWz9AwpmPUzKZj1uSmY9bApmPUYKZj1ACmY
        9QApmPUAKZj1GCmY9ZMpmPXTKZj1liid9WYnqvSKJ6r0iiid9WYpmPWWKZj10ymY9ZMpmPUYKZj1ACmY
        9QAAAAAAAAAAACmY9QApmPUGKZj1SSmY9akpmPXbKZf14ymX9eMpmPXbKZj1qSmY9UkpmPUGKZj1AAAA
        AAAAAAAA4AcAAMADAACAAQAACBAAABgYAAAYGAAAPDwAADgcAAA4HAAAOBwAABgYAAAYGAAACBAAAIAB
        AADAAwAA4AcAAA==
</value>
  </data>
</root>